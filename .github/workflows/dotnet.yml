# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Test Release

on:    
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:

    # Checkout Code
    - uses: actions/checkout@v3

    # Setup .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Build and Test
    - name: dotnet build test
      run: |
          dotnet restore
          dotnet build -c Release --no-restore --version-suffix build${{ env.GITHUB_RUN_NUMBER }}
          #dotnet test -c Release --no-build --verbosity normal

    # Create Nuget Package
    - name: dotnet pack
      run: dotnet pack -c Release --no-build -o './output' './Kunet.AsyncInterceptor/Kunet.AsyncInterceptor.csproj'

    - name: release-please-action
      uses: google-github-actions/release-please-action@v3.1.2
      with:
        token: ${{ secrets.PAT }}
        release-type: simple
        package-name: Kunet.AsyncInterceptor
        path: './output'

        

  #  # Upload Artifact
  #  - name: Upload Artifact
  #    uses: actions/upload-artifact@v3
  #    with:
  #      name: nuget
  #      path: './output/*.nupkg'
  #      if-no-files-found: error




  #  - name: GH Release
  #    uses: softprops/action-gh-release@v1
  #    #if: startsWith(github.ref, 'refs/tags/v')
  #    with:
  #      files: './output/*.nupkg'



  #deploy:
  #  runs-on: ubuntu-latest
  #  #environment: release-nuget
  #  needs: [build-and-test]
  #  permissions:
  #    packages: write
  #    contents: read
  #  steps:
  #    - name: Download Artifact
  #      uses: actions/download-artifact@v3
  #      with:
  #        name: nuget
  #        path: './output'

  #    - name: Setup .NET SDK
  #      uses: actions/setup-dotnet@v3
  #      with:
  #        dotnet-version: 6.0.x
  #      #  source-url: https://nuget.pkg.github.com/heku/index.json
  #      #env:
  #      #  NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #    - name: Push Nuget to GitHub Packages
  #      run: dotnet nuget push ./output/*.nupkg --skip-duplicate --no-symbols --source https://nuget.pkg.github.com/heku/index.json --api-key ${{ secrets.GITHUB_TOKEN }}

        
        
      

